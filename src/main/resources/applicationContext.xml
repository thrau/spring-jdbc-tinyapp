<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:jdbc="http://www.springframework.org/schema/jdbc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
  http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
  http://www.springframework.org/schema/context
  http://www.springframework.org/schema/context/spring-context-3.0.xsd http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc.xsd">

  <context:annotation-config/>

  <context:component-scan base-package="at.ac.tuwien.ifs.tinyapp"/>

  <bean id="jdbc" class="org.springframework.jdbc.core.JdbcTemplate" lazy-init="true">
    <property name="dataSource" ref="dataSource"/>
  </bean>

  <bean id="dataSource" class="org.springframework.jdbc.datasource.SimpleDriverDataSource" lazy-init="true">
    <property name="driverClass" value="org.h2.Driver"/>
    <!-- #{systemProperties['user.dir']} provides access to the current working directory of the execution -->
    <property name="url" value="jdbc:h2:#{systemProperties['user.dir']}/tinyappdb"/>
    <property name="username" value="sa"/>
    <property name="password" value=""/>
  </bean>

  <!-- spring utiltity to execute a sql script on a given data source -->
  <jdbc:initialize-database data-source="dataSource" ignore-failures="DROPS">
    <jdbc:script location="classpath:database-schema.sql"/>
  </jdbc:initialize-database>

</beans>
